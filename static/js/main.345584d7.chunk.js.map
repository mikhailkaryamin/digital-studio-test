{"version":3,"sources":["shared/consts.js","components/Button.jsx","components/Input.jsx","components/Modal.jsx","components/Link.jsx","components/LinksList.jsx","components/Sidebar.jsx","components/App.jsx","index.js"],"names":["ColorScheme","DEFAULT_GROUP","ButtonEl","styled","button","props","addStyle","Button","title","onClick","type","InputEl","input","Label","label","Input","placeholder","onChange","isRequired","evt","target","value","required","Style","INPUT","BUTTON_ADD","BUTTON_CLOSE","Title","Form","form","Span","span","Select","select","Option","option","Modal","typesGroup","onSetShowModal","setNewLink","useState","setTitle","url","setUrl","group","setGroup","onSubmit","preventDefault","link","map","toLowerCase","SettingButton","style","Container","div","LinkUrl","a","Link","id","onRemoveLink","href","LinksList","linksListData","item","STYLE_FOR_BUTTON","Sidebar","typesFilter","onSetCurrentGroup","GROUPS_MOCK","ContainerCenter","ContainerButton","ContainerInput","App","useLocalStorage","linksFromStorage","setLinksFromStorage","showModal","setShowModal","currentGroup","setCurrentGroup","linksByGroup","setLinksByGroup","searchValue","setSearchValue","linksBySearch","setLinksBySearch","newLink","linkIdForRemove","setLinkIdForRemove","useEffect","links","filter","getFilteredLinksByGroup","arrayFromSearch","split","linkWithoutSpace","join","every","word","includes","getFilteredLinksBySearch","nanoid","newLinkWithId","newLinksForStorage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.345584d7.chunk.js","sourcesContent":["const ColorScheme = {\n  DARK_BLUE: \"#185abc\",\n  CYAN_BLUE: \"#1a73e8\",\n  BLUE: \"#e8eaed\",\n  WHITE: \"#ffffff\",\n  RED: \"#ff0303\",\n};\n\nconst DEFAULT_GROUP = \"Все группы\";\nconst KEY_STORAGE_LINKS = \"links\";\n\nexport {\n  KEY_STORAGE_LINKS,\n  DEFAULT_GROUP,\n  ColorScheme,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { string, func } from \"prop-types\";\n\nimport { ColorScheme } from \"../shared/consts\";\n\nconst ButtonEl = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  color: ${ColorScheme.WHITE};\n  &:hover {\n    opacity: 0.9;\n  }\n  ${(props) => props.addStyle ? props.addStyle : \"\"}\n`;\n\nconst Button = ({ title, onClick, addStyle, type }) => {\n  return <ButtonEl onClick={onClick} addStyle={addStyle} type={type}>{title}</ButtonEl>;\n};\n\nButton.propTypes = {\n  title: string.isRequired,\n  onClick: func.isRequired,\n  addStyle: string,\n  type: string\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { bool, string, func } from \"prop-types\";\n\nconst InputEl = styled.input`\n  width: 100%;\n  padding: 10px;\n`;\nconst Label = styled.label`\n  ${(props) => (props.addStyle ? props.addStyle : \"\")}\n`;\n\nconst Input = ({ placeholder, type, addStyle, onChange, isRequired }) => {\n  return (\n    <Label>\n      <InputEl\n        type={type}\n        placeholder={placeholder}\n        addStyle={addStyle}\n        onChange={(evt) => onChange(evt.target.value)}\n        required={isRequired ? true : false}\n      />\n    </Label>\n  );\n};\n\nInput.propTypes = {\n  placeholder: string.isRequired,\n  type: string.isRequired,\n  addStyle: string,\n  onChange: func.isRequired,\n  isRequired: bool\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { array, func } from \"prop-types\";\n\nimport { ColorScheme } from \"../shared/consts\";\n\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nconst Style = {\n  INPUT: `margin-bottom: 10px`,\n  BUTTON_ADD: `background-color: ${ColorScheme.CYAN_BLUE}`,\n  BUTTON_CLOSE: `background-color: ${ColorScheme.RED}`,\n};\n\nconst Title = {\n  ADD_BUTTON: \"Добавить\",\n  CLOSE_MODAL: \"Закрыть\",\n  NAME: \"Название\",\n  URL: \"http://somelink\",\n};\n\nconst Form = styled.form`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  top: 30%;\n  left: calc(50% - 150px);\n  z-index: 100;\n  padding: 20px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.25);\n  > * {\n    margin-bottom: 10px;\n  :last-child{\n    margin-bottom: 0;\n  }\n`;\nconst Span = styled.span`\n  text-align: center;\n  font-size: 16;\n  text-transform: uppercase;\n`;\nconst Select = styled.select``;\nconst Option = styled.option``;\n\nconst Modal = ({ typesGroup, onSetShowModal, setNewLink }) => {\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [group, setGroup] = useState(typesGroup[0]);\n\n  const onSubmitForm = (evt) => {\n    evt.preventDefault();\n\n    setNewLink({\n      title,\n      link: url,\n      group,\n    });\n\n    onSetShowModal(false);\n  };\n\n  const onChangeSelect = (evt) => {\n    setGroup(evt.target.value);\n  };\n\n  return (\n    <Form onSubmit={onSubmitForm}>\n      <Span>Форма добавления ссылки</Span>\n      <Input\n        type=\"text\"\n        addStyle={Style.INPUT}\n        placeholder={Title.NAME}\n        isRequired={true}\n        onChange={setTitle}\n      />\n      <Input\n        type=\"url\"\n        addStyle={Style.INPUT}\n        placeholder={Title.URL}\n        onChange={setUrl}\n        isRequired={true}\n      />\n      <Select\n        onChange={onChangeSelect}\n      >\n        {typesGroup.map((type) => {\n          return (\n            <Option value={type.toLowerCase()} key={type}>\n              {type}\n            </Option>\n          );\n        })}\n      </Select>\n      <Button\n        title={Title.ADD_BUTTON}\n        onClick={() => {}}\n        addStyle={Style.BUTTON_ADD}\n        type=\"submit\"\n      />\n      <Button\n        title={Title.CLOSE_MODAL}\n        addStyle={Style.BUTTON_CLOSE}\n        onClick={() => onSetShowModal(false)}\n      />\n    </Form>\n  );\n};\n\nModal.propTypes = {\n  typesGroup: array.isRequired,\n  onSetShowModal: func.isRequired,\n  setNewLink: func.isRequired,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { string, func } from \"prop-types\";\n\nimport { ColorScheme } from \"../shared/consts\";\n\nimport Button from \"./Button\";\n\nconst SettingButton = {\n  title: \"Удалить ссылку\",\n  style: `background-color: ${ColorScheme.RED}`,\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid ${ColorScheme.BLUE};\n  border-radius: 3px;\n  &:hover {\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\n  }\n  > * {\n    margin-bottom: 10px;\n  :last-child{\n    margin-bottom: 0;\n  }\n  ${(props) => props.addStyle ? props.addStyle : \"\"}\n`;\n\nconst Title = styled.span`\n  font-weight: 700;\n  word-wrap: break-word;\n`;\n\nconst LinkUrl = styled.a``;\n\nconst Link = ({ link, title, addStyle, id, onRemoveLink }) => {\n  return (\n    <Container addStyle={addStyle}>\n      <Title>{title}</Title>\n      <LinkUrl href={link}>{link}</LinkUrl>\n      <Button title={SettingButton.title} addStyle={SettingButton.style} onClick={() => onRemoveLink(id)}/>\n    </Container>\n  );\n};\n\nLink.propTypes = {\n  link: string.isRequired,\n  title: string.isRequired,\n  id: string.isRequired,\n  addStyle: string,\n  onRemoveLink: func.isRequired,\n};\n\nexport default Link;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { array, func } from \"prop-types\";\n\nimport Link from \"./Link\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  > * {\n    margin-bottom: 10px;\n  :last-child{\n    margin-bottom: 0;\n  }\n`;\n\nconst STYLE_LINK = `\n  margin-bottom: 10px;\n`;\n\nconst LinksList = ({ linksListData, onRemoveLink }) => {\n  return (\n    <Container>\n      {linksListData.map((item) => {\n        return (\n          <Link\n            link={item.link}\n            title={item.title}\n            id={item.id}\n            key={item.id}\n            addStyle={STYLE_LINK}\n            onRemoveLink={onRemoveLink}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nLinksList.propTypes = {\n  linksListData: array.isRequired,\n  onRemoveLink: func.isRequired,\n};\n\nexport default LinksList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { array, func } from \"prop-types\";\n\nimport { ColorScheme, DEFAULT_GROUP } from \"../shared/consts\";\n\nimport Button from \"./Button\";\n\nconst STYLE_FOR_BUTTON = `\n  background-color: ${ColorScheme.DARK_BLUE};\n  margin-bottom: 10px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  width: 150px;\n  flex-direction: column;\n  padding: 0 10px;\n`;\n\nconst Sidebar = ({ typesFilter, onSetCurrentGroup }) => {\n  return (\n    <Container>\n      {typesFilter.map((type) => {\n        return (\n          <Button\n            key={type}\n            onClick={() => onSetCurrentGroup(type)}\n            title={type}\n            addStyle={STYLE_FOR_BUTTON}\n          />\n        );\n      })}\n      <Button\n        title={DEFAULT_GROUP}\n        key={DEFAULT_GROUP}\n        addStyle={STYLE_FOR_BUTTON}\n        onClick={() => onSetCurrentGroup(DEFAULT_GROUP)}\n      />\n    </Container>\n  );\n};\n\nSidebar.propTypes = {\n  onSetCurrentGroup: func.isRequired,\n  typesFilter: array.isRequired,\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocalStorage } from \"react-use\";\nimport { nanoid } from \"nanoid\";\n\nimport {\n  ColorScheme,\n  DEFAULT_GROUP,\n  KEY_STORAGE_LINKS,\n} from \"../shared/consts\";\n\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport LinksList from \"./LinksList\";\nimport Sidebar from \"./Sidebar\";\nimport Input from \"./Input\";\n\nconst GROUPS_MOCK = [\"группа 1\", \"группа 2\", \"группа 3\"];\n\nconst STYLE_FOR_BUTTON = `\n  background-color: ${ColorScheme.CYAN_BLUE}\n`;\n\nconst TITLE_ADD_BUTTON = \"Добавить ссылку\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  width: 1000px;\n  margin: 0 auto;\n  padding-top: 50px;\n  padding-right: 10px;\n  padding-left: 10px;\n`;\n\nconst ContainerCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  padding: 0 10px;\n`;\n\nconst ContainerButton = styled.div`\n  width: 150px;\n  padding: 0 10px;\n`;\n\nconst ContainerInput = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst getFilteredLinksByGroup = (currentGroup, links) => {\n  if (currentGroup === DEFAULT_GROUP) {\n    return links;\n  }\n\n  const filteredLinksByGroup = links.filter(\n      (link) => currentGroup === link.group\n  );\n\n  return filteredLinksByGroup;\n};\n\nconst getFilteredLinksBySearch = (searchValue, links) => {\n  if (searchValue === \"\") {\n    return links;\n  }\n\n  const isIncludeInLinks = (link) => {\n    const arrayFromSearch = searchValue.split(\" \");\n    const linkWithoutSpace = link[\"title\"].toLowerCase().split(\" \").join(\"\");\n    const isInclude = arrayFromSearch.every((word) =>\n      linkWithoutSpace.includes(word.toLowerCase())\n    );\n\n    return isInclude;\n  };\n\n  const filteredLinksBySearch = links.filter(isIncludeInLinks);\n\n  return filteredLinksBySearch;\n};\n\nconst App = () => {\n  const [linksFromStorage, setLinksFromStorage] = useLocalStorage(\n      KEY_STORAGE_LINKS, []\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const [currentGroup, setCurrentGroup] = useState(DEFAULT_GROUP);\n  const [linksByGroup, setLinksByGroup] = useState(linksFromStorage);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [linksBySearch, setLinksBySearch] = useState(linksByGroup);\n  const [newLink, setNewLink] = useState(null);\n  const [linkIdForRemove, setLinkIdForRemove] = useState(null);\n\n  useEffect(() => {\n    const links = getFilteredLinksByGroup(currentGroup, linksFromStorage);\n    setLinksByGroup(links);\n  }, [currentGroup, linksFromStorage]);\n\n  useEffect(() => {\n    const links = getFilteredLinksBySearch(searchValue, linksByGroup);\n    setLinksBySearch(links);\n  }, [searchValue, linksByGroup]);\n\n  useEffect(() => {\n    if (newLink) {\n      const id = nanoid();\n\n      const newLinkWithId = {\n        ...newLink,\n        id,\n      };\n\n      const newLinksForStorage = [...linksFromStorage, newLinkWithId];\n      setLinksFromStorage(newLinksForStorage);\n      setNewLink(null);\n    }\n  }, [newLink]);\n\n  useEffect(() => {\n    if (linkIdForRemove) {\n\n      const newLinksForStorage = linksFromStorage.filter((link) => link.id !== linkIdForRemove);\n      setLinksFromStorage(newLinksForStorage);\n      setLinkIdForRemove(null);\n    }\n  }, [linkIdForRemove]);\n\n  return (\n    <Container>\n      <Sidebar typesFilter={GROUPS_MOCK} onSetCurrentGroup={setCurrentGroup} />\n      <ContainerCenter>\n        <ContainerInput>\n          <Input type=\"text\" placeholder=\"Поиск...\" onChange={setSearchValue} />\n        </ContainerInput>\n        <LinksList linksListData={linksBySearch} onRemoveLink={setLinkIdForRemove}/>\n      </ContainerCenter>\n      <ContainerButton>\n        <Button\n          title={TITLE_ADD_BUTTON}\n          onClick={() => setShowModal(true)}\n          addStyle={STYLE_FOR_BUTTON}\n        />\n      </ContainerButton>\n\n      {showModal && (\n        <Modal\n          typesGroup={GROUPS_MOCK}\n          onSetShowModal={setShowModal}\n          setNewLink={setNewLink}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}